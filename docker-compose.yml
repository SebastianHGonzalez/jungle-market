version: "3"
services:
    rabbitmq:
        image: "rabbitmq:3.6-management-alpine"
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - network

    back-office:
        build: ./jungle-market-bo
        ports:
            - "8080:3000"
        environment:
            JUNGLE_MARKET_QUERY_API_ENDPOINT: "http://query-api:3000/"
            JUNGLE_MARKET_QUERY_API_ENDPOINT_PRIVATE: "http://query-api:3000/"

    sas-emulator:
        build: ./jungle-market-store-awareness-system-emulator
        ports:
            - "8081:3000"
        environment:
            JUNGLE_MARKET_COMMAND_API_ENDPOINT: "http://command-api:3000/"
            JUNGLE_MARKET_COMMAND_API_ENDPOINT_PRIVATE: "http://command-api:3000/"

    shopping-cart-query-service:
        build: ./jungle-market-shopping-cart-query-service

    shopping-cart-command-service:
        build: ./jungle-market-shopping-cart-command-service
        depends_on:
            - rabbitmq
        environment: 
            JUNGLE_MARKET_AMQP_URL: "amqp://rabbitmq"
            JUNGLE_MARKET_AMQP_EXCHANGE: "exchange"
            JUNGLE_MARKET_AMQP_EXCHANGE_TYPE: "fanout"
            JUNGLE_MARKET_AMQP_QUEUE: "shoppingCart"
            JUNGLE_MARKET_AMQP_PATTERN: ""

    graphql-query-api:
        depends_on:
            - shopping-cart-query-service
        build: ./jungle-market-graphql-query-api
        ports:
            - "4000:4000"
        environment:
            JUNGLE_MARKET_SHOPPING_CART_QUERY_SERVICE_ENDPOINT: "http://shopping-cart-query-service:4000/"

    graphql-command-api:
        depends_on:
            - shopping-cart-command-service
        build: ./jungle-market-graphql-command-api
        ports:
            - "4000:4000"
        environment:
            JUNGLE_MARKET_SHOPPING_CART_COMMAND_SERVICE_ENDPOINT: "http://shopping-cart-command-service:4000/"

networks:
    # Declare our private network.  We must declare one for the magic
    # Docker DNS to work, but otherwise its default settings are fine.
    network: {}
